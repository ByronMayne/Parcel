<?xml version="1.0" encoding="utf-8" ?>
<!-- 
  | This script is just used on Windows only to convert the output .pdb
  | into the .mdb that is required by Unity in order to debug dlls. On 
  | macOS this step is not required. 
  -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- 
  // Name: The name of the Target (Think of it as a function).
  // Condition: What has to be true for this to run? We have to be on Windows and have ConvertPDB variable be 'True' 
  //            or 'true'.
  -->
  <PropertyGroup>
    <pdb2mdbPath>$(ProjectDir)lib\MonoBleedingEdge\4.0\pdb2mdb.exe</pdb2mdbPath>
  </PropertyGroup>
  <Target Name="GenerateMonoSymbols"  
    Condition="'$(OS)' != 'Unix' And ( '$(GenerateMonoSymbols)' =='true' Or '$(GenerateMonoSymbols)' == 'True' ) ">
    <Message Condition="Exists('$(pdb2mdbPath)')" Text="[pdb2mdb.exe]      : Converting Pdb to Mdb for $(TargetFileName)" Importance="high"/>
    <!-- Run pdb2mdb.exe if it exists -->
    <Exec    Condition="Exists('$(pdb2mdbPath)')" Command="&quot;$(pdb2mdbPath)&quot; $(AssemblyName).dll" WorkingDirectory="$(MSBuildProjectDirectory)\$(OutputPath)" />
    <!-- Print a warning if the exe does not exist. The build still will pass but you will not be able to debug. -->
    <Warning Condition="!Exists('$(pdb2mdbPath)')" Text="Build Warning. Unable to find pdb2mdb at $(pdb2mdbPath) debug symbols will not be generated" File=" $(pdb2mdbPath)"/>
  </Target>
</Project>